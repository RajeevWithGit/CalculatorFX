<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>calculatorfx</groupId>
    <artifactId>calculatorfx</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <developers>
        <developer>
            <name>Johann Reyes</name>
            <email>jreyes@vaporwarecorp.com</email>
        </developer>
    </developers>

    <build>
        <defaultGoal>clean package</defaultGoal>
        <finalName>calculatorfx</finalName>
        <plugins>
            <!-- Create uber jar in default location (works with proguard as well) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <finalName>${project.build.finalName}</finalName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Build native app w/ shaded jar -->
            <plugin>
                <groupId>com.zenjava</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>8.8.3</version>

                <configuration>

                    <!-- Various packager settings. See documentation -->
                    <mainClass>calculatorfx.CalculatorFX</mainClass>
                    <vendor>VaporwareCorp</vendor>

                    <!-- Use the jar generated from the shade plugin (also keeps manifest) -->
                    <updateExistingJar>true</updateExistingJar>

                    <!-- Don't add the lib/ dir -->
                    <skipCopyingDependencies>true</skipCopyingDependencies>

                    <!-- Don't add a manifest entry referencing lib/* -->
                    <useLibFolderContentForManifestClasspath>true</useLibFolderContentForManifestClasspath>

                    <bundleArguments>
                        <!-- to include "dtjava.js" and other related files, set this to TRUE -->
                        <jnlp.includeDT>true</jnlp.includeDT>

                        <!-- the JNLP-bundler needs this, they don't use "appName" for the filename ... you have to set this, otherwise it doesn't build -->
                        <!-- for details of that JNLP-bundler, please have a look at the source -->
                        <!-- https://github.com/Debian/openjfx/blob/e32fd960e20c58c9b7db27e426b4bca6d52add2f/modules/fxpackager/src/main/java/com/oracle/tools/packager/jnlp/JNLPBundler.java#L84 -->
                        <jnlp.outfile>LibrarianApp</jnlp.outfile>
                    </bundleArguments>

                </configuration>

                <executions>
                    <!-- sets up /app directory, manifests, adds deploy dir, icons, etc. -->
                    <execution>
                        <id>create-jfxjar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build-jar</goal>
                        </goals>
                    </execution>
                    <!-- creates a native bundler around the buildjar output -->
                    <execution>
                        <id>create-native</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build-native</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

</project>
